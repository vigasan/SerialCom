cmake_minimum_required(VERSION 3.16)

set(PROJECT_NAME "SerialCom")

project(${PROJECT_NAME} VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

find_package(Qt5 COMPONENTS Core Gui Qml Quick QuickControls2 SerialPort REQUIRED)

if (WIN32)
#! [appicon_windows]
    set(app_icon_resource_windows "${CMAKE_CURRENT_SOURCE_DIR}/resources/serialcomm.rc")
    add_executable(${PROJECT_NAME}
        frame.cpp
        frameprocessor.cpp
        main.cpp
        serialworker.cpp
        qml.qrc
        ${app_icon_resource_windows}
    )
#! [appicon_windows]
elseif (APPLE)
#! [appicon_macOS]
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set(MACOSX_BUNDLE_ICON_FILE serialcommqt.icns)

    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/resources/serialcomm.icns")
    set_source_files_properties(${app_icon_macos} PROPERTIES
           MACOSX_PACKAGE_LOCATION "images")

    add_executable(${PROJECT_NAME} MACOSX_BUNDLE
        frame.cpp
        frameprocessor.cpp
        main.cpp
        serialworker.cpp
        qml.qrc
        ${app_icon_macos}
    )
#! [appicon_macOS]
else()
    add_executable(${PROJECT_NAME}
        frame.cpp
        frameprocessor.cpp
        main.cpp
        serialworker.cpp
        qml.qrc
    )
endif()

target_link_libraries(${PROJECT_NAME}
                      Qt5::Core
                      Qt5::Gui
                      Qt5::Qml
                      Qt5::Quick
                      Qt5::QuickControls2
                      Qt5::SerialPort
)

set_target_properties(${PROJECT_NAME} 
                      PROPERTIES 
                      CXX_STANDARD 11 
                      CXX_STANDARD_REQUIRED ON)
